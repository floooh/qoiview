cmake_minimum_required(VERSION 3.0)
project(qoiview)
set(CMAKE_C_STANDARD 99)

if(CMAKE_SYSTEM_NAME STREQUAL Windows)
    add_executable(qoiview WIN32 qoiview.c)
    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT qoiview)
    target_link_libraries(qoiview PRIVATE d3d11)
else()
    add_executable(qoiview qoiview.c)
    if(CMAKE_SYSTEM_NAME STREQUAL Darwin)
        target_compile_options(qoiview PRIVATE -x objective-c)
        target_link_libraries(qoiview PRIVATE "-framework QuartzCore" "-framework Cocoa" "-framework MetalKit" "-framework Metal")
    elseif (CMAKE_SYSTEM_NAME STREQUAL Linux)
        set(THREADS_PREFER_PTHREAD_FLAG ON)
        find_package(Threads REQUIRED)
        target_link_libraries(qoiview PRIVATE X11 Xi Xcursor GL dl m)
        target_link_libraries(qoiview PRIVATE Threads::Threads)
    elseif (CMAKE_SYSTEM_NAME STREQUAL OpenBSD)
        target_include_directories(qoiview PRIVATE "/usr/X11R6/include")
        target_link_directories(qoiview PRIVATE "/usr/X11R6/lib")
        set(THREADS_PREFER_PTHREAD_FLAG ON)
        find_package(Threads REQUIRED)
        target_link_libraries(qoiview PRIVATE X11 Xi Xcursor GL m pthread)
    elseif (CMAKE_SYSTEM_NAME STREQUAL Emscripten)
        set(CMAKE_EXECUTABLE_SUFFIX ".html")
        target_link_options(qoiview PRIVATE --shell-file ../sokol/shell.html)
        target_link_options(qoiview PRIVATE -sINITIAL_MEMORY=33554432 -sNO_FILESYSTEM=1 -sASSERTIONS=0 -sMALLOC=emmalloc --closure=1)
    endif()
endif()

if (CMAKE_C_COMPILER_ID MATCHES "Clang" AND NOT CMAKE_SYSTEM_NAME STREQUAL Emscripten AND NOT CMAKE_SYSTEM_NAME STREQUAL OpenBSD)
    target_link_options(qoiview PRIVATE LINKER:-dead_strip)
endif()
